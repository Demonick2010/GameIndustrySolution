<div class="table-responsive">
    <table class="table table-striped">
        <thead class="thead-light">
            <tr>
                <th>Name</th>
                <th>Genre</th>
                <th>Release Date</th>

                @*Урок 3 привязка данных*@
                <th><input type="checkbox" @bind="displayButton" /></th>
            </tr>
        </thead>
        <tbody>
            <GenericList ListOfItems="games">
                <ItemTemplate Context="game">
                    <IndividualGame Game="game" IsTable="true" DisplayButton="displayButton" DeleteGame="DeleteTheGame" />
                </ItemTemplate>
            </GenericList>

            <Confirmation @ref="confirmation" onCancel="onCancel" onConfirm="onConfirm">
                <div class="text-danger">Do you wish to delete @gameToBeDeleted.Name?</div>
            </Confirmation>
        </tbody>
    </table>
</div>

@code {
    /*Урок 2*/
    [Parameter] public List<Game> games { get; set; }

    /*Урок 4*/
    //[Parameter] public RenderFragment ChildContent { get; set; }
    //[Parameter] public RenderFragment EmptyList { get; set; }

    bool displayButton = false;

    /*Урок 3*/
    void DeleteTheGame(Game game)
    {
        gameToBeDeleted = game;
        confirmation.Show();
        //games.Remove(game);
    }

    /*Урок 5*/
    protected override void OnInitialized()
    {
        // Этот метод отвечает за инициализацию значений в самом начале жизненного цикла компонента, но после SetParametersAsync(ParameterView parameters).
        // Он выполняется вторым

        Console.WriteLine($"1. OnInitialized(). Games Count {games?.Count}.");
    }

    protected override void OnParametersSet()
    {
        // Этот метод вызывается после OnInitialized() или каждый раз после изменения значений параметров.
        // Он выполняется третьим

        Console.WriteLine($"2. Method OnParametersSet() is done. Games Count {games?.Count}.");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        // Этот метод вызывается после Финальной отрисовки страницы.
        // Он выполняется четвёртым

        Console.WriteLine($"3. Method OnAfterRender() is done. First render? {firstRender}\n");
    }

    protected override bool ShouldRender()
    {
        // Этот метод отключает возможность повторной отрисовки компонента
        return true;
    }

    // Урок 6
    //public void DoSomeThing()
    //{

    //}

    // Урок 6
    Confirmation confirmation;
    Game gameToBeDeleted;

    void onConfirm()
    {
        games.Remove(gameToBeDeleted);
        confirmation.Hide();
        gameToBeDeleted = null;
    }

    void onCancel()
    {
        confirmation.Hide();
        gameToBeDeleted = null;
    }
}
